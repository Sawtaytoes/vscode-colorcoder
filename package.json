{
  "name": "vscode-colormate",
  "displayName": "ColorMate: Semantic Highlighter",
  "description": "ColorMate colors all similarly named variables the same, so you can quickly and easily skim your code by reading colors instead of text. The hashing algorithm is modeled after the same amazing CRC8 hasher used by Colorcoder for Sublime Text.",
  "version": "3.3.3",
  "license": "MIT",
  "author": "Kevin Ghadyani",
  "publisher": "KevinGhadyani",
  "packageManager": "yarn@4.0.1",
  "repository": {
    "type": "git",
    "url": "https://github.com/Sawtaytoes/vscode-colormate.git"
  },
  "icon": "images/icon.png",
  "engines": {
    "vscode": "^1.84.2"
  },
  "scripts": {
    "clean": "node cleanCompiled.mjs",
    "compile": "yarn clean && tsc",
    "lint": "eslint src --ext ts",
    "pretest": "yarn compile && yarn lint",
    "publishPackage": "vsce package --no-yarn && vsce publish --no-yarn",
    "start": "yarn watch",
    "test": "yarn compile; node ./out/runTests.js",
    "vscode:prepackage": "yarn compile",
    "vscode:prepublish": "yarn compile",
    "watch": "yarn clean && tsc -watch"
  },
  "devDependencies": {
    "@types/expect": "^24.3.0",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.4",
    "@types/node": "^20.9.0",
    "@types/vscode": "^1.84.1",
    "@typescript-eslint/eslint-plugin": "^6.10.0",
    "@typescript-eslint/parser": "^6.10.0",
    "@vscode/test-electron": "^2.3.6",
    "eslint": "^8.53.0",
    "expect": "^29.7.0",
    "glob": "^10.3.10",
    "mocha": "^10.2.0",
    "source-map-support": "^0.5.21",
    "typescript": "^5.2.2"
  },
  "dependencies": {
    "@reduxjs/toolkit": "^1.9.7",
    "redux": "^4.2.1",
    "redux-observable": "^2.0.0",
    "rxjs": "^7.8.1",
    "vscode-oniguruma": "^2.0.1",
    "vscode-textmate": "^9.0.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "keywords": [
    "color identifiers",
    "color mate",
    "color-mate",
    "colorcoder",
    "colorer",
    "coloring",
    "colormate",
    "colors",
    "highlight",
    "highlighter",
    "highlighting",
    "rainbow",
    "rainbow highlight",
    "rainbow highlighter",
    "rainbow highlighting",
    "semantic highlight",
    "semantic highlighter",
    "semantic highlighting",
    "semantic",
    "syntax highlight",
    "syntax highlighter",
    "syntax highlighting",
    "syntax",
    "variable highlight",
    "variable highlighter",
    "variable highlighting",
    "variables"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "ColorMate Options",
      "properties": {
        "colormate.darkTheme.lighting": {
          "type": "number",
          "default": 65,
          "markdownDescription": "This controls the `lighting` in a dark color theme. This is used in an HSL function."
        },
        "colormate.darkTheme.saturation": {
          "type": "number",
          "default": 65,
          "markdownDescription": "This controls the `saturation` in a dark color theme. This is used in an HSL function."
        },
        "colormate.highContrastDarkTheme.lighting": {
          "type": "number",
          "default": 90,
          "markdownDescription": "This controls the `lighting` in a high-contrast dark color theme. This is used in an HSL function."
        },
        "colormate.highContrastDarkTheme.saturation": {
          "type": "number",
          "default": 100,
          "markdownDescription": "This controls the `saturation` in a high-contrast dark color theme. This is used in an HSL function."
        },
        "colormate.highContrastLightTheme.lighting": {
          "type": "number",
          "default": 15,
          "markdownDescription": "This controls the `lighting` in a high-contrast light color theme. This is used in an HSL function."
        },
        "colormate.highContrastLightTheme.saturation": {
          "type": "number",
          "default": 100,
          "markdownDescription": "This controls the `saturation` in a high-contrast light color theme. This is used in an HSL function."
        },
        "colormate.lightTheme.lighting": {
          "type": "number",
          "default": 35,
          "markdownDescription": "This controls the `lighting` in a light color theme. This is used in an HSL function."
        },
        "colormate.lightTheme.saturation": {
          "type": "number",
          "default": 100,
          "markdownDescription": "This controls the `saturation` in a light color theme. This is used in an HSL function."
        },
        "colormate.ignoredLanguages": {
          "type": "array",
          "default": [],
          "markdownDescription": "Don't colorize files in these [languages](https://code.visualstudio.com/docs/languages/identifiers#_known-language-identifiers)."
        },
        "colormate.semanticTokenTypes": {
          "type": "array",
          "default": [
            "class.defaultLibrary",
            "class",
            "enum",
            "enumMember",
            "event",
            "function.defaultLibrary",
            "function",
            "interface",
            "macro",
            "method",
            "namespace",
            "parameter",
            "property.readonly",
            "property",
            "struct",
            "type.defaultLibrary",
            "type",
            "variable.readonly.defaultLibrary",
            "variable.readonly",
            "variable"
          ],
          "markdownDescription": "The types of language tokens that should have a color applied. In addition to the [list of common types](https://code.visualstudio.com/api/language-extensions/semantic-highlight-guide#standard-token-types-and-modifiers), language authors may define their own."
        },
        "colormate.hasDefaultTextMateTokenScopes": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "ColorMate comes with its own TextMate token scopes for JavaScript, TypeScript, HTML, and JSON. If you'd like to disable those defaults, disable this setting.\n\nThese aren't the same as the semantic scopes. Those you can override with a separate setting. All this does is disable the special TextMate token scopes that were defined to make JS, TS, HTML, and JSON fully render with semantic highlighting in areas not covered by semantic tokens."
        },
        "colormate.textMateTokenScopes": {
          "type": "array",
          "default": [],
          "markdownDescription": "The types of TextMate language tokens will be semantically highlighted.\n\nTextMate scopes are hierarchical; therefore, `source.tsx` will enable semantic coloring for all idnetifers whereas `support.class.component.tsx` is much more specific.\n\nYou can also optionally leave out the language scope (`.tsx`). This allows it to work on all languages, but be careful when doing this! You can never be sure what side-effects will occur when being too generic."
        },
        "colormate.excludedTextMateTokenScopes": {
          "type": "array",
          "default": [],
          "markdownDescription": "Sometimes, TextMate tokens are too generic. To avoid having your own file semantically colored, you can instead use generic tokens (like `source.elixir` then exclude specific scopes with this setting.\n\nThese scopes are also hierarchical. So long as they're greater than or equal to the scope of the included scope, they will be excluded."
        }
      }
    }
  },
  "__metadata": {
    "id": "64bc7756-6dbb-4712-872e-027686d631a2",
    "publisherDisplayName": "Kevin Ghadyani",
    "publisherId": "7e325be2-1610-4c6d-b78f-e8e08c8b74ed",
    "isPreReleaseVersion": false
  }
}
